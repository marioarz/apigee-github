# This is a basic workflow to help you get started with Actions
# Example workflow
# .github/workflows/example.yml

name: 'proxi-api-ci'
on:
  push:
    branches:
    - 'main'
jobs:
  run:
    name: 'deploy api proxy'
    permissions:
      id-token: write
      contents: read
    runs-on: 'ubuntu-latest'
    steps:
    - name: Checkout
        uses: actions/checkout@v2
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        create_credentials_file: true
        activate_credentials_file: true
        workload_identity_provider: ${{ secrets.PROVIDER_NAME }} # this is the output provider_name from the TF module
        service_account: ${{ secrets.SA_EMAIL }} # this is a SA email configured using the TF module with access to YOUR-GCS-BUCKET
    - id: 'gcloud'
      uses: 'google-github-actions/setup-gcloud@v0.3.0'
    - id: 'dir'
      run: ls
    - id: 'bundle'
      run: 'zip -r apiproxy.zip apiproxy'
    - id: 'upload'
      run: "echo \"APIGEE_REVISION=$(curl --fail -X POST -H \"Content-Type: multipart/form-data\" -H \"Authorization: Bearer $TOKEN\" -F \"file=@apiproxy.zip\" \"https://apigee.googleapis.com/v1/organizations/cce-apigee-payg/apis?action=import&name=retail-v1\" --silent | jq --raw-output .revision)\" >> $GITHUB_ENV"
      #run: "echo \"::set-output name=apigee-revision::$(curl --fail -X POST -H \"Content-Type: multipart/form-data\" -H \"Authorization: Bearer ${{steps.auth.outputs.access_token}}\" -F \"file=@proxy.zip\" \"https://apigee.googleapis.com/v1/organizations/${{secrets.APIGEE_ORG}}/apis?action=import&name=retail-v1\" --silent | jq --raw-output .revision)\""
    - id: 'test'
      run: echo $APIGEE_REVISION
    - id: 'deploy'
      run: "curl -X POST -H \"Authorization: Bearer ${{steps.auth.outputs.access_token}}\" \"https://apigee.googleapis.com/v1/organizations/cce-apigee-payg/environments/test-env/apis/retail-v1/revisions/11/deployments?override=true\""         